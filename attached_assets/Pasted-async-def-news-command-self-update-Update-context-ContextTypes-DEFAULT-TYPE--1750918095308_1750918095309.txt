async def news_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /news TICKER - –∞–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ç–∏–∫–µ—Ä –≤ –∫–æ–º–∞–Ω–¥–µ
            if not context.args:
                await update.message.reply_text(
                    "üì∞ **–ê–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–æ–º–ø–∞–Ω–∏–∏**\n\n"
                    "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/news TICKER`\n\n"
                    "–ü—Ä–∏–º–µ—Ä—ã:\n"
                    "‚Ä¢ `/news SBER` - –Ω–æ–≤–æ—Å—Ç–∏ –æ –°–±–µ—Ä–±–∞–Ω–∫–µ\n"
                    "‚Ä¢ `/news GAZP` - –Ω–æ–≤–æ—Å—Ç–∏ –æ –ì–∞–∑–ø—Ä–æ–º–µ\n"
                    "‚Ä¢ `/news YNDX` - –Ω–æ–≤–æ—Å—Ç–∏ –æ –Ø–Ω–¥–µ–∫—Å–µ\n\n"
                    "ü§ñ –ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –ò–ò\n"
                    "‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: 3-7 —Å–µ–∫—É–Ω–¥",
                    parse_mode="Markdown"
                )
                return

            ticker = context.args[0].upper()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∞–Ω–∞–ª–∏–∑–∞
            loading_msg = await update.message.reply_text(
                f"üîç –ò—â—É –Ω–æ–≤–æ—Å—Ç–∏ –æ **{ticker}**...\n"
                f"ü§ñ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —á–µ—Ä–µ–∑ Perplexity AI...",
                parse_mode="Markdown"
            )
            
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π (–±–∞–∑–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)
            import asyncio
            await asyncio.sleep(2)  # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
            
            # –ë–∞–∑–æ–≤—ã–π –æ—Ç–≤–µ—Ç
            result_text = f"""üì∞ **–ù–û–í–û–°–¢–ò –ü–û {ticker}**

üè¢ **–ö–æ–º–ø–∞–Ω–∏—è:** {ticker}
üîç **–ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π:** –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
‚è±Ô∏è **–ü–µ—Ä–∏–æ–¥:** –ü–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞

üöß **–°—Ç–∞—Ç—É—Å:** –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –≤ –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ

üí° **–ß—Ç–æ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
- `/price {ticker}` - —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ –∞–∫—Ü–∏–∏
- `/accounts` - —Ç–æ—Ä–≥–æ–≤—ã–µ —Å—á–µ—Ç–∞
- `/status` - —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º

üöÄ **–°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º:**
- –†–µ–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ Perplexity API
- –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π —á–µ—Ä–µ–∑ OpenAI
- –¢–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–≤–æ—Å—Ç–µ–π

‚ö†Ô∏è **–î–∏—Å–∫–ª–µ–π–º–µ—Ä:** –ê–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è."""
            
            await loading_msg.edit_text(result_text, parse_mode="Markdown")
            logger.info(f"–ö–æ–º–∞–Ω–¥–∞ news –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥–ª—è {ticker}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ news: {e}")
            ticker_name = context.args[0].upper() if context.args else "–∞–∫—Ü–∏–∏"
            await update.message.reply_text(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –Ω–æ–≤–æ—Å—Ç–µ–π {ticker_name}. "
                f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                parse_mode="Markdown"
            )