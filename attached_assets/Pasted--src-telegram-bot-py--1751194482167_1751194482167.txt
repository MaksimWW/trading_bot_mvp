–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π —Ñ–∞–π–ª src/telegram_bot.py. –ù–∞–π–¥–∏ —Å—Ç—Ä–æ–∫–∏ –≥–¥–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥:

        self.application.add_handler(CommandHandler("morning_brief", self.morning_brief_command))

–ò –¥–æ–±–∞–≤—å –ø–æ—Å–ª–µ –Ω–∏—Ö:

        self.application.add_handler(CommandHandler("rss_status", self.rss_status_command))

–ó–∞—Ç–µ–º –¥–æ–±–∞–≤—å –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ rss_status_command –ø–µ—Ä–µ–¥ –º–µ—Ç–æ–¥–æ–º morning_brief_command:

    async def rss_status_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """
        –ö–æ–º–∞–Ω–¥–∞ /rss_status - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ RSS –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        """
        try:
            loading_msg = await update.message.reply_text(
                "üîç –ü—Ä–æ–≤–µ—Ä—è—é RSS –∏—Å—Ç–æ—á–Ω–∏–∫–∏...",
                parse_mode=ParseMode.MARKDOWN
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º RSS –∏—Å—Ç–æ—á–Ω–∏–∫–∏
            from src.rss_parser import RSSParser
            async with RSSParser() as parser:
                working_count = await parser.check_sources_availability()
                
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
                market_news = await parser.get_market_news(6)
                
                status_text = f"""üì° *–°–¢–ê–¢–£–° RSS –ò–°–¢–û–ß–ù–ò–ö–û–í*

‚úÖ *–†–∞–±–æ—Ç–∞—é—â–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:* {working_count}/4

üì∞ *–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ ({len(market_news)}):*
"""
                
                for i, news in enumerate(market_news[:3], 1):
                    title = news['title'][:60] + "..." if len(news['title']) > 60 else news['title']
                    source = news.get('source', 'N/A')
                    status_text += f"{i}. {title}\n   üìç {source}\n\n"
                
                status_text += f"üïê –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ: {datetime.now().strftime('%H:%M')}"
                
                await loading_msg.edit_text(
                    status_text,
                    parse_mode=ParseMode.MARKDOWN
                )
            
            logger.info("RSS status –ø—Ä–æ–≤–µ—Ä–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            
        except Exception as e:
            error_msg = f"‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ RSS:* {str(e)}"
            
            if 'loading_msg' in locals():
                await loading_msg.edit_text(error_msg, parse_mode=ParseMode.MARKDOWN)
            else:
                await update.message.reply_text(error_msg, parse_mode=ParseMode.MARKDOWN)
            
            logger.error(f"RSS status command error: {e}")

–ò –¥–æ–±–∞–≤—å –≤ –º–µ—Ç–æ–¥ help_command –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –≤ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:

- `/rss_status` - –°—Ç–∞—Ç—É—Å RSS –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ üì°

–¢–∞–∫–∂–µ –¥–æ–±–∞–≤—å –∏–º–ø–æ—Ä—Ç datetime –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç:

from datetime import datetime