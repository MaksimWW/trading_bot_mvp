–í —Ñ–∞–π–ª–µ src/telegram_bot.py –¥–æ–±–∞–≤—å –∫–æ–º–∞–Ω–¥—É /signal –¥–ª—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤:

1. –î–æ–±–∞–≤—å –∏–º–ø–æ—Ä—Ç –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞ (–ø–æ—Å–ª–µ —Å—Ç—Ä–æ–∫–∏ "from news_analyzer import get_news_analyzer"):
from signal_generator import get_trading_signal_for_telegram

2. –î–æ–±–∞–≤—å –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ signal_command –≤ –∫–ª–∞—Å—Å TradingTelegramBot (–ø–æ—Å–ª–µ –º–µ—Ç–æ–¥–∞ news_command):

async def signal_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /signal TICKER."""
    if not context.args:
        await update.message.reply_text(
            "üéØ *–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª*\n\n"
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/signal TICKER`\n\n"
            "–ü—Ä–∏–º–µ—Ä—ã:\n"
            "‚Ä¢ `/signal SBER` - —Å–∏–≥–Ω–∞–ª –¥–ª—è –°–±–µ—Ä–±–∞–Ω–∫–∞\n"
            "‚Ä¢ `/signal GAZP` - —Å–∏–≥–Ω–∞–ª –¥–ª—è –ì–∞–∑–ø—Ä–æ–º–∞\n"
            "‚Ä¢ `/signal YNDX` - —Å–∏–≥–Ω–∞–ª –¥–ª—è –Ø–Ω–¥–µ–∫—Å–∞\n\n"
            "üß† –û–±—ä–µ–¥–∏–Ω—è–µ—Ç: —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ (60%) + –Ω–æ–≤–æ—Å—Ç–∏ (40%)\n"
            "‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: 5-12 —Å–µ–∫—É–Ω–¥",
            parse_mode=ParseMode.MARKDOWN
        )
        return

    ticker = context.args[0].upper()
    
    loading_msg = await update.message.reply_text(
        f"üéØ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–æ—Ä–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª –¥–ª—è *{ticker}*...\n"
        "üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –∫–∞—Ä—Ç–∏–Ω—É...\n"
        "üì∞ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –Ω–æ–≤–æ—Å—Ç–Ω–æ–π —Ñ–æ–Ω...\n"
        "üß† –ö–æ–º–±–∏–Ω–∏—Ä—É—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...",
        parse_mode=ParseMode.MARKDOWN
    )
    
    try:
        result_text = await get_trading_signal_for_telegram(ticker)
        
        await loading_msg.edit_text(
            result_text,
            parse_mode=ParseMode.MARKDOWN
        )
        
        logger.info(f"–¢–æ—Ä–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª {ticker} —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        error_msg = f"‚ùå *–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∏–≥–Ω–∞–ª–∞ {ticker}*\n\n"
        error_msg += f"–ü—Ä–∏—á–∏–Ω–∞: {str(e)}\n\n"
        error_msg += "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
        error_msg += "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∏–∫–µ—Ä (SBER, GAZP, YNDX)\n"
        error_msg += f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ `/analysis {ticker}` –∏ `/news {ticker}`\n"
        error_msg += "‚Ä¢ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥"
        
        await loading_msg.edit_text(
            error_msg,
            parse_mode=ParseMode.MARKDOWN
        )
        logger.error(f"Signal command error for {ticker}: {e}")

3. –í –º–µ—Ç–æ–¥–µ setup_handlers –¥–æ–±–∞–≤—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥—ã (–Ω–∞–π–¥–∏ —Å—Ç—Ä–æ–∫—É —Å analysis –∏ –¥–æ–±–∞–≤—å –ø–æ—Å–ª–µ –Ω–µ—ë):
app.add_handler(CommandHandler("signal", self.signal_command))

4. –í –º–µ—Ç–æ–¥–µ help_command –Ω–∞–π–¥–∏ —Ä–∞–∑–¥–µ–ª —Å /analysis –∏ –¥–æ–±–∞–≤—å –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É:
- `/signal TICKER` - –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª

5. –í –º–µ—Ç–æ–¥–µ setup_bot_commands –¥–æ–±–∞–≤—å –∫–æ–º–∞–Ω–¥—É –≤ –º–µ–Ω—é (–Ω–∞–π–¥–∏ —Å—Ç—Ä–æ–∫—É —Å analysis –∏ –¥–æ–±–∞–≤—å –ø–æ—Å–ª–µ –Ω–µ—ë):
BotCommand("signal", "üéØ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª"),