–ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–π —Ñ–∞–π–ª src/telegram_bot.py, –¥–æ–±–∞–≤–∏–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Daily Report System. –î–æ–±–∞–≤—å –∏–º–ø–æ—Ä—Ç daily_report –º–æ–¥—É–ª—è, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥—ã.

–î–æ–±–∞–≤—å –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤:
from src.daily_report import get_daily_report_generator

–í –º–µ—Ç–æ–¥ __init__ –∫–ª–∞—Å—Å–∞ TradingBot –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–æ–±–∞–≤—å:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Daily Report Generator
        self.daily_report_generator = get_daily_report_generator(
            self.portfolio_manager,
            self.news_analyzer,
            self.technical_analyzer,
            self.rss_parser
        )

–î–æ–±–∞–≤—å –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –≤ –∫–ª–∞—Å—Å TradingBot:
    async def handle_daily_report(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /daily_report"""
        try:
            user_id = str(update.effective_user.id)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞
            loading_msg = await update.message.reply_text(
                "üìä –ì–µ–Ω–µ—Ä–∏—Ä—É—é –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç...\n"
                "‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–æ—Ä–≥–æ–≤—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –ø–æ—Ä—Ç—Ñ–µ–ª—å...",
                parse_mode='Markdown'
            )
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
            report = await self.daily_report_generator.generate_daily_report(user_id)
            
            # –£–¥–∞–ª—è–µ–º loading —Å–æ–æ–±—â–µ–Ω–∏–µ
            await loading_msg.delete()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç
            await update.message.reply_text(
                report,
                parse_mode='Markdown'
            )
            
            # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
            self.logger.info(f"Daily report generated for user {user_id}")
            
        except Exception as e:
            self.logger.error(f"Error in daily_report command: {e}")
            await update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞.\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç."
            )

–í –º–µ—Ç–æ–¥ setup_handlers –¥–æ–±–∞–≤—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã:
        # Daily Report
        self.application.add_handler(CommandHandler("daily_report", self.handle_daily_report))

–í –º–µ—Ç–æ–¥ handle_help –¥–æ–±–∞–≤—å –≤ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Å—Ç—Ä–æ–∫—É:
- `/daily_report` - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –∏—Ç–æ–≥–∞–º –¥–Ω—è üåô