async def risk_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /risk TICKER."""
        if not context.args:
            await update.message.reply_text(
                "‚öñÔ∏è *–ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤ –ø–æ–∑–∏—Ü–∏–∏*\n\n"
                "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/risk TICKER [–¶–ï–ù–ê_–í–•–û–î–ê] [–°–¢–û–ü_–õ–û–°–°]`\n\n"
                "–ü—Ä–∏–º–µ—Ä—ã:\n"
                "‚Ä¢ `/risk SBER` - –∞–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–∞ –ø–æ —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω–µ\n"
                "‚Ä¢ `/risk SBER 100 93` - –∞–Ω–∞–ª–∏–∑ —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏\n\n"
                "üìä –ê–Ω–∞–ª–∏–∑ –≤–∫–ª—é—á–∞–µ—Ç:\n"
                "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏\n"
                "‚Ä¢ –†–∞—Å—á–µ—Ç —Å—Ç–æ–ø-–ª–æ—Å—Å–∞ –∏ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞\n"
                "‚Ä¢ –û—Ü–µ–Ω–∫–∞ —É—Ä–æ–≤–Ω—è —Ä–∏—Å–∫–∞\n"
                "‚Ä¢ –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∏—Å–∫/–¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å",
                parse_mode=ParseMode.MARKDOWN
            )
            return

        ticker = context.args[0].upper()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∞–Ω–∞–ª–∏–∑–∞
        loading_msg = await update.message.reply_text(
            f"‚öñÔ∏è –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ä–∏—Å–∫–∏ –¥–ª—è *{ticker}*...\n"
            f"üìä –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é –ø–∞—Ä–∞–º–µ—Ç—Ä—ã...",
            parse_mode=ParseMode.MARKDOWN
        )

        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–∞
            entry_price = None
            stop_loss_price = None
            
            if len(context.args) >= 2:
                try:
                    entry_price = float(context.args[1])
                except ValueError:
                    await loading_msg.edit_text(
                        f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–µ–Ω—ã –≤—Ö–æ–¥–∞: {context.args[1]}\n"
                        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: `/risk SBER 100`",
                        parse_mode=ParseMode.MARKDOWN
                    )
                    return
            
            if len(context.args) >= 3:
                try:
                    stop_loss_price = float(context.args[2])
                except ValueError:
                    await loading_msg.edit_text(
                        f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Ç–æ–ø-–ª–æ—Å—Å–∞: {context.args[2]}\n"
                        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: `/risk SBER 100 93`",
                        parse_mode=ParseMode.MARKDOWN
                    )
                    return

            # –ï—Å–ª–∏ —Ü–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é
            if entry_price is None:
                instrument = await self.tinkoff.search_instrument(ticker)
                if not instrument:
                    await loading_msg.edit_text(
                        f"‚ùå –ê–∫—Ü–∏—è —Å —Ç–∏–∫–µ—Ä–æ–º *{ticker}* –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n\n"
                        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: SBER, GAZP, YNDX, LKOH, NVTK, ROSN",
                        parse_mode=ParseMode.MARKDOWN
                    )
                    return
                
                entry_price = await self.tinkoff.get_last_price(instrument["figi"])
                if not entry_price:
                    await loading_msg.edit_text(
                        f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –¥–ª—è {ticker}",
                        parse_mode=ParseMode.MARKDOWN
                    )
                    return

            # –°–æ–∑–¥–∞–µ–º risk manager
            risk_manager = RiskManager()
            
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–ø-–ª–æ—Å—Å –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω
            if stop_loss_price is None:
                sl_tp = risk_manager.calculate_stop_loss_take_profit(
                    ticker=ticker,
                    entry_price=entry_price,
                    signal_direction="BUY"
                )
                stop_loss_price = sl_tp["stop_loss_price"]
            
            # –ü—Ä–∏–º–µ—Ä–Ω—ã–π –±–∞–ª–∞–Ω—Å —Å—á–µ—Ç–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–∞–µ–º –∏–∑ API)
            account_balance = 100000.0  # 100k —Ä—É–±–ª–µ–π –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
            
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é
            position_analysis = risk_manager.calculate_position_size(
                ticker=ticker,
                entry_price=entry_price,
                stop_loss_price=stop_loss_price,
                account_balance=account_balance,
                confidence_score=0.6  # –°—Ä–µ–¥–Ω—è—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
            )
            
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–ø-–ª–æ—Å—Å –∏ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç
            sl_tp_analysis = risk_manager.calculate_stop_loss_take_profit(
                ticker=ticker,
                entry_price=entry_price,
                signal_direction="BUY"
            )

            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if not position_analysis.get("approved", False):
                result_text = f"‚ùå *–ê–ù–ê–õ–ò–ó –†–ò–°–ö–û–í {ticker}*\n\n"
                result_text += f"üö´ *–ü–æ–∑–∏—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞*\n"
                result_text += f"üìù –ü—Ä–∏—á–∏–Ω–∞: {position_analysis.get('reason', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}\n\n"
                result_text += f"üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
                result_text += f"‚Ä¢ –°–Ω–∏–∑—å—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏\n"
                result_text += f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π —Å—Ç–æ–ø-–ª–æ—Å—Å\n"
                result_text += f"‚Ä¢ –î–æ–∂–¥–∏—Ç–µ—Å—å –ª—É—á—à–∏—Ö —É—Å–ª–æ–≤–∏–π"
            else:
                # –≠–º–æ–¥–∑–∏ –¥–ª—è —É—Ä–æ–≤–Ω—è —Ä–∏—Å–∫–∞
                risk_emoji = {
                    "LOW": "üü¢",
                    "MEDIUM": "üü°", 
                    "HIGH": "üü†",
                    "EXTREME": "üî¥"
                }
                
                emoji = risk_emoji.get(position_analysis["risk_level"], "‚ö™")
                
                result_text = f"‚öñÔ∏è *–ê–ù–ê–õ–ò–ó –†–ò–°–ö–û–í {ticker}*\n\n"
                
                # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
                result_text += f"üí∞ *–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∑–∏—Ü–∏–∏:*\n"
                result_text += f"üìà –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: {entry_price:.2f} ‚ÇΩ\n"
                result_text += f"üõë –°—Ç–æ–ø-–ª–æ—Å—Å: {stop_loss_price:.2f} ‚ÇΩ\n"
                result_text += f"üéØ –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: {sl_tp_analysis['take_profit_price']:.2f} ‚ÇΩ\n\n"
                
                # –†–∞—Å—á–µ—Ç –ø–æ–∑–∏—Ü–∏–∏
                result_text += f"üìä *–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –ø–æ–∑–∏—Ü–∏—è:*\n"
                result_text += f"üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π: {position_analysis['shares_count']}\n"
                result_text += f"üíµ –°—É–º–º–∞ –ø–æ–∑–∏—Ü–∏–∏: {position_analysis['position_amount']:,.0f} ‚ÇΩ\n"
                result_text += f"üìà –î–æ–ª—è –ø–æ—Ä—Ç—Ñ–µ–ª—è: {position_analysis['position_percent']:.1f}%\n\n"
                
                # –ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤
                result_text += f"‚öñÔ∏è *–ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤:*\n"
                result_text += f"{emoji} –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: {position_analysis['risk_level']}\n"
                result_text += f"üí∏ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —É–±—ã—Ç–æ–∫: {position_analysis['risk_amount']:,.0f} ‚ÇΩ\n"
                result_text += f"üìâ –†–∏—Å–∫ –æ—Ç –¥–µ–ø–æ–∑–∏—Ç–∞: {position_analysis['risk_percent']:.2f}%\n"
                result_text += f"‚öñÔ∏è –†–∏—Å–∫/–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: 1:{sl_tp_analysis['risk_reward_ratio']:.1f}\n\n"
                
                # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è
                result_text += f"üí° *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:*\n"
                result_text += f"{position_analysis['recommendation']}\n\n"
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                result_text += f"üìã *–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:*\n"
                result_text += f"‚Ä¢ –¢—Ä–µ–π–ª–∏–Ω–≥ —Å—Ç–æ–ø: {sl_tp_analysis['trailing_stop_distance']:.2f} ‚ÇΩ\n"
                result_text += f"‚Ä¢ –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: –ù–æ—Ä–º–∞–ª—å–Ω–∞—è\n"
                result_text += f"‚Ä¢ –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å: –í—ã—Å–æ–∫–∞—è\n\n"

            # –ü–æ–¥—Å–∫–∞–∑–∫–∏
            result_text += f"*üõ†Ô∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
            result_text += f"‚Ä¢ `/price {ticker}` - —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞\n"
            result_text += f"‚Ä¢ `/analysis {ticker}` - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑\n"
            result_text += f"‚Ä¢ `/news {ticker}` - –∞–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π\n\n"
            
            result_text += f"‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ:* –ê–Ω–∞–ª–∏–∑ –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –ø—Ä–∏–º–µ—Ä–Ω–æ–º –¥–µ–ø–æ–∑–∏—Ç–µ 100,000 ‚ÇΩ. "
            result_text += f"–°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –ø–æ–¥ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç."

            await loading_msg.edit_text(
                result_text,
                parse_mode=ParseMode.MARKDOWN
            )
            
            logger.info(f"–ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤ {ticker} –∑–∞–≤–µ—Ä—à–µ–Ω: —Ä–∏—Å–∫ {position_analysis.get('risk_percent', 0):.2f}%")

        except Exception as e:
            error_msg = f"‚ùå *–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏—Å–∫–æ–≤ {ticker}*\n\n"
            error_msg += f"–ü—Ä–∏—á–∏–Ω–∞: {str(e)}\n\n"
            error_msg += f"üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
            error_msg += f"‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–∏–∫–µ—Ä–∞\n"
            error_msg += f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `/risk SBER 100 93` —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏\n"
            error_msg += f"‚Ä¢ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥"
            
            await loading_msg.edit_text(
                error_msg,
                parse_mode=ParseMode.MARKDOWN
            )
            logger.error(f"Risk command error for {ticker}: {e}")

    async def portfolio_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /portfolio."""
        loading_msg = await update.message.reply_text(
            "üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø–æ—Ä—Ç—Ñ–µ–ª—å...\n"
            "üîç –û—Ü–µ–Ω–∏–≤–∞—é —Ä–∏—Å–∫–∏ –∏ —Å–æ—Å—Ç–∞–≤–ª—è—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...",
            parse_mode=ParseMode.MARKDOWN
        )

        try:
            # –°–æ–∑–¥–∞–µ–º risk manager
            risk_manager = RiskManager()
            
            # –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            sample_positions = [
                {
                    "ticker": "SBER",
                    "shares": 100,
                    "entry_price": 95.0,
                    "current_price": 99.95,
                    "risk_percent": 2.1,
                    "sector": "–§–∏–Ω–∞–Ω—Å—ã"
                },
                {
                    "ticker": "GAZP", 
                    "shares": 50,
                    "entry_price": 180.0,
                    "current_price": 175.0,
                    "risk_percent": 1.8,
                    "sector": "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞"
                }
            ]
            
            # –ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è
            portfolio_analysis = risk_manager.assess_portfolio_risk(sample_positions)
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            result_text = f"üìä *–ê–ù–ê–õ–ò–ó –ü–û–†–¢–§–ï–õ–Ø*\n\n"
            
            # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            result_text += f"üìà *–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n"
            result_text += f"üî¢ –ü–æ–∑–∏—Ü–∏–π –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ: {portfolio_analysis['positions_count']}\n"
            result_text += f"‚öñÔ∏è –û–±—â–∏–π —Ä–∏—Å–∫: {portfolio_analysis['total_risk_percent']:.1f}%\n"
            result_text += f"üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ª–∏–º–∏—Ç–∞: {portfolio_analysis['risk_utilization']:.1f}%\n"
            
            # –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ —Å —ç–º–æ–¥–∑–∏
            risk_emoji = {
                "LOW": "üü¢ –ù–∏–∑–∫–∏–π",
                "MEDIUM": "üü° –°—Ä–µ–¥–Ω–∏–π",
                "HIGH": "üü† –í—ã—Å–æ–∫–∏–π", 
                "EXTREME": "üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π"
            }
            risk_text = risk_emoji.get(portfolio_analysis['risk_level'], "‚ö™ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π")
            result_text += f"üéØ –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: {risk_text}\n\n"
            
            # –¢–µ–∫—É—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏
            if sample_positions:
                result_text += f"üíº *–¢–µ–∫—É—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏:*\n"
                for pos in sample_positions:
                    pnl = ((pos['current_price'] - pos['entry_price']) / pos['entry_price']) * 100
                    pnl_emoji = "üìà" if pnl >= 0 else "üìâ"
                    result_text += f"‚Ä¢ *{pos['ticker']}*: {pos['shares']} —à—Ç.\n"
                    result_text += f"  {pnl_emoji} P&L: {pnl:+.1f}% | –†–∏—Å–∫: {pos['risk_percent']:.1f}%\n"
                result_text += "\n"
            
            # –°–µ–∫—Ç–æ—Ä–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
            if 'sector_exposure' in portfolio_analysis:
                result_text += f"üè≠ *–°–µ–∫—Ç–æ—Ä–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:*\n"
                for sector, exposure in portfolio_analysis['sector_exposure'].items():
                    result_text += f"‚Ä¢ {sector}: {exposure:.1f}%\n"
                result_text += "\n"
            
            # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            result_text += f"üí° *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:*\n"
            for recommendation in portfolio_analysis['recommendations']:
                result_text += f"‚Ä¢ {recommendation}\n"
            result_text += "\n"
            
            # –õ–∏–º–∏—Ç—ã —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞
            result_text += f"‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞:*\n"
            result_text += f"‚Ä¢ –ú–∞–∫—Å. —Ä–∏—Å–∫ –ø–æ—Ä—Ç—Ñ–µ–ª—è: {portfolio_analysis['max_allowed_risk']:.1f}%\n"
            result_text += f"‚Ä¢ –ú–∞–∫—Å. –ø–æ–∑–∏—Ü–∏—è: 5.0% –¥–µ–ø–æ–∑–∏—Ç–∞\n"
            result_text += f"‚Ä¢ –ú–∞–∫—Å. –¥–Ω–µ–≤–Ω–æ–π —É–±—ã—Ç–æ–∫: 3.0%\n"
            result_text += f"‚Ä¢ –ú–∞–∫—Å. —Å–¥–µ–ª–æ–∫ –≤ –¥–µ–Ω—å: 5\n\n"
            
            # –ü–æ–¥—Å–∫–∞–∑–∫–∏
            result_text += f"*üõ†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª–µ–º:*\n"
            result_text += f"‚Ä¢ `/risk TICKER` - –∞–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏\n"
            result_text += f"‚Ä¢ `/settings` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞\n\n"
            
            result_text += f"‚ö†Ô∏è *–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:* –ü–æ–∫–∞–∑–∞–Ω—ã –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. "
            result_text += f"–í –±–æ–µ–≤–æ–º —Ä–µ–∂–∏–º–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏."

            await loading_msg.edit_text(
                result_text,
                parse_mode=ParseMode.MARKDOWN
            )
            
            logger.info(f"–ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω: —Ä–∏—Å–∫ {portfolio_analysis['total_risk_percent']:.1f}%")

        except Exception as e:
            error_msg = f"‚ùå *–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è*\n\n"
            error_msg += f"–ü—Ä–∏—á–∏–Ω–∞: {str(e)}\n\n"
            error_msg += f"üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥"
            
            await loading_msg.edit_text(
                error_msg,
                parse_mode=ParseMode.MARKDOWN
            )
            logger.error(f"Portfolio command error: {e}")