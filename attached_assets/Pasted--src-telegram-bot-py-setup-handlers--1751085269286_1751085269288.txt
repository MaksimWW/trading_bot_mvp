–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π —Ñ–∞–π–ª src/telegram_bot.py. –ù–∞–π–¥–∏ –º–µ—Ç–æ–¥ setup_handlers –∏ –¥–æ–±–∞–≤—å –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É –ø–æ—Å–ª–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö:

        # –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
        app.add_handler(CommandHandler("news", self.news_command))
        app.add_handler(CommandHandler("ai_analysis", self.ai_analysis_command))

–ó–∞—Ç–µ–º –Ω–∞–π–¥–∏ –º–µ—Ç–æ–¥ help_command –∏ –¥–æ–±–∞–≤—å –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã –≤ —Å–µ–∫—Ü–∏—é "üì∞ –ê–ù–ê–õ–ò–¢–ò–ö–ê –ò –ù–û–í–û–°–¢–ò:":

- `/ai_analysis TICKER` - –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π AI –∞–Ω–∞–ª–∏–∑ —Å —Ç–æ—Ä–≥–æ–≤—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏

–ó–∞—Ç–µ–º –¥–æ–±–∞–≤—å –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ ai_analysis_command –ø–µ—Ä–µ–¥ –º–µ—Ç–æ–¥–æ–º unknown_command:

    async def ai_analysis_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ai_analysis TICKER."""
        if not context.args:
            await update.message.reply_text(
                "ü§ñ *–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π AI –∞–Ω–∞–ª–∏–∑ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞*\n\n"
                "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/ai_analysis TICKER`\n\n"
                "–ü—Ä–∏–º–µ—Ä—ã:\n"
                "‚Ä¢ `/ai_analysis SBER` - –ø–æ–ª–Ω—ã–π AI –∞–Ω–∞–ª–∏–∑ –°–±–µ—Ä–±–∞–Ω–∫–∞\n"
                "‚Ä¢ `/ai_analysis GAZP` - –∞–Ω–∞–ª–∏–∑ –ì–∞–∑–ø—Ä–æ–º–∞\n"
                "‚Ä¢ `/ai_analysis YNDX` - –∞–Ω–∞–ª–∏–∑ –Ø–Ω–¥–µ–∫—Å–∞\n\n"
                "üß† –í–∫–ª—é—á–∞–µ—Ç: —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ + –Ω–æ–≤–æ—Å—Ç–∏ + —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n"
                "‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: 5-10 —Å–µ–∫—É–Ω–¥",
                parse_mode=ParseMode.MARKDOWN
            )
            return
        
        ticker = context.args[0].upper()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∞–Ω–∞–ª–∏–∑–∞
        loading_msg = await update.message.reply_text(
            f"ü§ñ –ó–∞–ø—É—Å–∫–∞—é AI –∞–Ω–∞–ª–∏–∑ *{ticker}*...\n"
            f"üìä –°–æ–±–∏—Ä–∞—é —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã...\n"
            f"üì∞ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –Ω–æ–≤–æ—Å—Ç–∏...\n"
            f"üß† –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...",
            parse_mode=ParseMode.MARKDOWN
        )
        
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º AI Signal Integration
            from ai_signal_integration import get_ai_signal_integration
            
            ai_integration = get_ai_signal_integration()
            ai_signal = await ai_integration.analyze_ticker(ticker)
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è Telegram
            result_text = ai_integration.format_signal_for_telegram(ai_signal)
            
            await loading_msg.edit_text(
                result_text,
                parse_mode=ParseMode.MARKDOWN
            )
            
            logger.info(f"AI –∞–Ω–∞–ª–∏–∑ {ticker} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {ai_signal.signal_strength.value}")
            
        except Exception as e:
            error_msg = f"‚ùå *–û—à–∏–±–∫–∞ AI –∞–Ω–∞–ª–∏–∑–∞ {ticker}*\n\n"
            error_msg += f"–ü—Ä–∏—á–∏–Ω–∞: {str(e)}\n\n"
            error_msg += f"üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
            error_msg += f"‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–∏–∫–µ—Ä–∞\n"
            error_msg += f"‚Ä¢ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥\n"
            error_msg += f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å /status –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º"
            
            await loading_msg.edit_text(
                error_msg,
                parse_mode=ParseMode.MARKDOWN
            )
            logger.error(f"AI analysis command error for {ticker}: {e}")