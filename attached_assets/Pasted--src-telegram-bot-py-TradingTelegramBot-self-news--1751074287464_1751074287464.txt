–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π —Ñ–∞–π–ª src/telegram_bot.py. –ù–∞–π–¥–∏ –≤ –∫–ª–∞—Å—Å–µ TradingTelegramBot —Å—Ç—Ä–æ–∫—É:

        self.news_analyzer = get_news_analyzer()

–ò –¥–æ–±–∞–≤—å –ø–æ—Å–ª–µ –Ω–µ—ë:

        # –ò–º–ø–æ—Ä—Ç PortfolioManager
        from portfolio_manager import get_portfolio_manager
        self.portfolio = get_portfolio_manager()

–ó–∞—Ç–µ–º –Ω–∞–π–¥–∏ —Ñ—É–Ω–∫—Ü–∏—é setup_handlers –∏ –Ω–∞–π–¥–∏ —Å—Ç—Ä–æ–∫–∏:

        # –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
        app.add_handler(CommandHandler("news", self.news_command))

–ò –¥–æ–±–∞–≤—å –ø–æ—Å–ª–µ –Ω–∏—Ö:

        # –ü–æ—Ä—Ç—Ñ–µ–ª—å
        app.add_handler(CommandHandler("portfolio", self.portfolio_command))
        app.add_handler(CommandHandler("buy", self.buy_command))
        app.add_handler(CommandHandler("sell", self.sell_command))

–ó–∞—Ç–µ–º –Ω–∞–π–¥–∏ —Ñ—É–Ω–∫—Ü–∏—é setup_bot_commands –∏ –Ω–∞–π–¥–∏ —Å—Ç—Ä–æ–∫–∏:

            BotCommand("news", "üì∞ –ê–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–æ–º–ø–∞–Ω–∏–∏"),

–ò –¥–æ–±–∞–≤—å –ø–æ—Å–ª–µ –Ω–∏—Ö:

            BotCommand("portfolio", "üíº –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å"),
            BotCommand("buy", "üí∞ –ö—É–ø–∏—Ç—å –∞–∫—Ü–∏–∏"),
            BotCommand("sell", "üìà –ü—Ä–æ–¥–∞—Ç—å –∞–∫—Ü–∏–∏"),

–ó–∞—Ç–µ–º –¥–æ–±–∞–≤—å –≤ –∫–æ–Ω–µ—Ü –∫–ª–∞—Å—Å–∞ TradingTelegramBot —ç—Ç–∏ –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã:

    async def portfolio_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /portfolio."""
        loading_msg = await update.message.reply_text(
            "üíº –û–±–Ω–æ–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è...",
            parse_mode=ParseMode.MARKDOWN
        )
        
        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—ã –∏ –ø–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É
            await self.portfolio.update_portfolio_prices()
            summary = self.portfolio.get_portfolio_summary()
            
            if "error" in summary:
                await loading_msg.edit_text(
                    f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Ä—Ç—Ñ–µ–ª—è: {summary['error']}",
                    parse_mode=ParseMode.MARKDOWN
                )
                return
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            portfolio_text = self._format_portfolio_summary(summary)
            
            await loading_msg.edit_text(
                portfolio_text,
                parse_mode=ParseMode.MARKDOWN
            )
            
            logger.info("–°–≤–æ–¥–∫–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
            
        except Exception as e:
            await loading_msg.edit_text(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è: {str(e)}",
                parse_mode=ParseMode.MARKDOWN
            )
            logger.error(f"Portfolio command error: {e}")

    async def buy_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /buy TICKER QUANTITY."""
        if len(context.args) < 2:
            await update.message.reply_text(
                "üí∞ *–ü–æ–∫—É–ø–∫–∞ –∞–∫—Ü–∏–π (–≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è)*\n\n"
                "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/buy TICKER QUANTITY`\n\n"
                "–ü—Ä–∏–º–µ—Ä—ã:\n"
                "‚Ä¢ `/buy SBER 100` - –∫—É–ø–∏—Ç—å 100 –∞–∫—Ü–∏–π –°–±–µ—Ä–±–∞–Ω–∫–∞\n"
                "‚Ä¢ `/buy GAZP 50` - –∫—É–ø–∏—Ç—å 50 –∞–∫—Ü–∏–π –ì–∞–∑–ø—Ä–æ–º–∞\n\n"
                "üí° –ü–æ–∫—É–ø–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ —Ç–µ–∫—É—â–µ–π —Ä—ã–Ω–æ—á–Ω–æ–π —Ü–µ–Ω–µ",
                parse_mode=ParseMode.MARKDOWN
            )
            return
        
        ticker = context.args[0].upper()
        try:
            quantity = int(context.args[1])
        except ValueError:
            await update.message.reply_text(
                "‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º",
                parse_mode=ParseMode.MARKDOWN
            )
            return
        
        if quantity <= 0:
            await update.message.reply_text(
                "‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º",
                parse_mode=ParseMode.MARKDOWN
            )
            return
        
        loading_msg = await update.message.reply_text(
            f"üí∞ –ü–æ–∫—É–ø–∞—é {quantity} –∞–∫—Ü–∏–π {ticker}...",
            parse_mode=ParseMode.MARKDOWN
        )
        
        try:
            result = await self.portfolio.buy_stock(ticker, quantity)
            
            if result["success"]:
                buy_text = f"""
üí∞ *–ü–û–ö–£–ü–ö–ê –í–´–ü–û–õ–ù–ï–ù–ê*

üéØ *–ê–∫—Ü–∏—è:* {ticker}
üìä *–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:* {result['quantity']} —à—Ç
üíµ *–¶–µ–Ω–∞:* {result['price']:.2f} ‚ÇΩ
üí∏ *–ö–æ–º–∏—Å—Å–∏—è:* {result['commission']:.2f} ‚ÇΩ
üí≥ *–û–±—â–∞—è —Å—É–º–º–∞:* {result['total_cost']:,.0f} ‚ÇΩ

üí∞ *–ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏:* {result['new_cash_balance']:,.0f} ‚ÇΩ

üéâ –ê–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å!

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/portfolio` –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è
                """
            else:
                buy_text = f"""
‚ùå *–û–®–ò–ë–ö–ê –ü–û–ö–£–ü–ö–ò*

üéØ *–ê–∫—Ü–∏—è:* {ticker}
üìä *–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:* {quantity} —à—Ç

‚ùå *–ü—Ä–∏—á–∏–Ω–∞:* {result['error']}

üí° *–°–æ–≤–µ—Ç—ã:*
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤
- –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Ç–∏–∫–µ—Ä–∞
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/portfolio` –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞
                """
            
            await loading_msg.edit_text(
                buy_text,
                parse_mode=ParseMode.MARKDOWN
            )
            
        except Exception as e:
            await loading_msg.edit_text(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ {ticker}: {str(e)}",
                parse_mode=ParseMode.MARKDOWN
            )
            logger.error(f"Buy command error for {ticker}: {e}")

    async def sell_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /sell TICKER QUANTITY."""
        await update.message.reply_text(
            "üìà *–ü—Ä–æ–¥–∞–∂–∞ –∞–∫—Ü–∏–π*\n\n"
            "‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–¥–∞–∂–∏ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏.\n\n"
            "–ü–æ–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã:\n"
            "‚Ä¢ `/buy TICKER QUANTITY` - –ø–æ–∫—É–ø–∫–∞ –∞–∫—Ü–∏–π\n"
            "‚Ä¢ `/portfolio` - –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Ä—Ç—Ñ–µ–ª—è\n"
            "‚Ä¢ `/price TICKER` - —Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã",
            parse_mode=ParseMode.MARKDOWN
        )

    def _format_portfolio_summary(self, summary: dict) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è –¥–ª—è Telegram."""
        portfolio_value = summary['portfolio_value']
        cash_balance = summary['cash_balance']
        unrealized_pnl = summary['unrealized_pnl']
        unrealized_pnl_percent = summary['unrealized_pnl_percent']
        positions_count = summary['positions_count']
        positions = summary['positions']
        
        # –≠–º–æ–¥–∑–∏ –¥–ª—è P&L
        pnl_emoji = "üìà" if unrealized_pnl >= 0 else "üìâ"
        pnl_sign = "+" if unrealized_pnl >= 0 else ""
        
        text = f"""
üíº *–í–ò–†–¢–£–ê–õ–¨–ù–´–ô –ü–û–†–¢–§–ï–õ–¨*

üí∞ *–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:* {portfolio_value:,.0f} ‚ÇΩ
üíµ *–ù–∞–ª–∏—á–Ω—ã–µ:* {cash_balance:,.0f} ‚ÇΩ
{pnl_emoji} *P&L:* {pnl_sign}{unrealized_pnl:,.0f} ‚ÇΩ ({pnl_sign}{unrealized_pnl_percent:.2f}%)

üìä *–ü–æ–∑–∏—Ü–∏–π:* {positions_count}
        """
        
        if positions_count > 0:
            text += "\nüìã *–ü–û–ó–ò–¶–ò–ò:*\n"
            
            for pos in positions[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –ø–æ–∑–∏—Ü–∏–π
                pos_pnl = pos['unrealized_pnl']
                pos_pnl_percent = pos['unrealized_pnl_percent']
                pos_emoji = "üü¢" if pos_pnl >= 0 else "üî¥"
                pos_sign = "+" if pos_pnl >= 0 else ""
                
                text += f"""
{pos_emoji} *{pos['ticker']}* - {pos['company_name']}
   üìä {pos['quantity']} —à—Ç √ó {pos['current_price']:.2f} ‚ÇΩ = {pos['total_value']:,.0f} ‚ÇΩ
   üíπ P&L: {pos_sign}{pos_pnl:,.0f} ‚ÇΩ ({pos_sign}{pos_pnl_percent:.1f}%)
   üìà –í–µ—Å: {pos['weight_percent']:.1f}%
                """
            
            if len(positions) > 10:
                text += f"\nüìã –ò –µ—â—ë {len(positions) - 10} –ø–æ–∑–∏—Ü–∏–π...\n"
        
        # –°–µ–∫—Ç–æ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
        if 'sector_allocation' in summary and summary['sector_allocation']:
            text += "\nüè≠ *–†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–û –°–ï–ö–¢–û–†–ê–ú:*\n"
            for sector, weight in summary['sector_allocation'].items():
                text += f"‚Ä¢ {sector}: {weight:.1f}%\n"
        
        text += f"""

üí° *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏:*
- `/buy TICKER QUANTITY` - –∫—É–ø–∏—Ç—å –∞–∫—Ü–∏–∏
- `/price TICKER` - —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—É
- `/news TICKER` - –∞–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π
- `/analysis TICKER` - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑

‚ö†Ô∏è *–≠—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è*
        """
        
        return text