–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π —Ñ–∞–π–ª src/telegram_bot.py. –ù–∞–π–¥–∏ –º–µ—Ç–æ–¥ setup_handlers –∏ –¥–æ–±–∞–≤—å –ø–µ—Ä–µ–¥ —Å—Ç—Ä–æ–∫–æ–π —Å add_error_handler –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:

        # Portfolio coordination commands
        app.add_handler(CommandHandler("portfolio_strategies", self.portfolio_strategies_command))
        app.add_handler(CommandHandler("strategy_weights", self.strategy_weights_command))
        app.add_handler(CommandHandler("coordinate_portfolio", self.coordinate_portfolio_command))
        app.add_handler(CommandHandler("portfolio_performance", self.portfolio_performance_command))

–¢–∞–∫–∂–µ –¥–æ–±–∞–≤—å –≤ –∏–º–ø–æ—Ä—Ç—ã –≤ –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞:

from portfolio_coordinator import get_portfolio_coordinator

–ê –≤ __init__ –º–µ—Ç–æ–¥ –¥–æ–±–∞–≤—å:

        self.portfolio_coordinator = get_portfolio_coordinator()

–ò –¥–æ–±–∞–≤—å —ç—Ç–∏ –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –≤ –∫–ª–∞—Å—Å TradingTelegramBot –ø–µ—Ä–µ–¥ –º–µ—Ç–æ–¥–æ–º unknown_command:

    async def portfolio_strategies_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /portfolio_strategies."""
        try:
            coordinator = self.portfolio_coordinator
            allocations = coordinator.get_strategy_allocations()
            status = coordinator.get_portfolio_status()
            
            if not allocations:
                text = """
üìä *–ü–û–†–¢–§–ï–õ–¨ –°–¢–†–ê–¢–ï–ì–ò–ô*

‚ùå –í –ø–æ—Ä—Ç—Ñ–µ–ª–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π

üí° *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
- `/coordinate_portfolio` - –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é
- `/strategy_weights` - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Å–∞–º–∏
- `/portfolio_performance` - –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å

*–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã Strategy Engine.*
                """
            else:
                text = f"""
üìä *–ê–ö–¢–ò–í–ù–´–ï –°–¢–†–ê–¢–ï–ì–ò–ò –ü–û–†–¢–§–ï–õ–Ø*

üìà *–û–±—â–∏–π —Å—Ç–∞—Ç—É—Å:*
- –í—Å–µ–≥–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π: {status.total_strategies}
- –ê–∫—Ç–∏–≤–Ω—ã—Ö: {status.active_strategies}
- –°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {status.performance_score:.2%}
- –î–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞: {status.cash_allocation:.1%}

"""
                
                for i, (key, allocation) in enumerate(allocations.items(), 1):
                    strategy_name = allocation.strategy_id.replace('_', ' ').title()
                    text += f"""
üéØ *{i}. {strategy_name} ({allocation.ticker}):*
- –í–µ—Å –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ: {allocation.weight:.1%}
- –¶–µ–ª–µ–≤–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {allocation.target_allocation:.1%}
- –¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {allocation.current_allocation:.1%}
- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {allocation.performance_score:.2%}
- –ü–æ—Å–ª–µ–¥–Ω—è—è —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞: {allocation.last_rebalance.strftime('%H:%M %d.%m')}

"""
                
                text += f"""
üìä *–ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è:*
- –°—Ç–∞—Ç—É—Å: {'üü¢ –í–∫–ª—é—á–µ–Ω–∞' if coordinator.enabled else 'üî¥ –û—Ç–∫–ª—é—á–µ–Ω–∞'}
- –ú–µ—Ç–æ–¥ –≤–µ—Å–æ–≤: {coordinator.weight_method.value.replace('_', ' ').title()}
- –ü–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è: {coordinator.last_coordination.strftime('%H:%M %d.%m') if coordinator.last_coordination else '–ù–µ –≤—ã–ø–æ–ª–Ω—è–ª–∞—Å—å'}

üí° *–ö–æ–º–∞–Ω–¥—ã:*
- `/coordinate_portfolio` - –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é
- `/strategy_weights` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ—Å–æ–≤
- `/portfolio_performance` - –¥–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
                """
            
            await update.message.reply_text(text, parse_mode=ParseMode.MARKDOWN)
            
        except Exception as e:
            await update.message.reply_text(
                f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –ø–æ—Ä—Ç—Ñ–µ–ª—è: {str(e)}",
                parse_mode=ParseMode.MARKDOWN
            )
            logger.error(f"Portfolio strategies command error: {e}")

    async def strategy_weights_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /strategy_weights."""
        try:
            coordinator = self.portfolio_coordinator
            allocations = coordinator.get_strategy_allocations()
            
            if not allocations:
                text = """
‚öñÔ∏è *–£–ü–†–ê–í–õ–ï–ù–ò–ï –í–ï–°–ê–ú–ò –°–¢–†–ê–¢–ï–ì–ò–ô*

‚ùå –í –ø–æ—Ä—Ç—Ñ–µ–ª–µ –Ω–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ—Å–∞–º–∏

üí° –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—ã Strategy Engine, –∑–∞—Ç–µ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –ø–æ—Ä—Ç—Ñ–µ–ª—è.
                """
            else:
                text = f"""
‚öñÔ∏è *–í–ï–°–ê –°–¢–†–ê–¢–ï–ì–ò–ô –í –ü–û–†–¢–§–ï–õ–ï*

üìä *–¢–µ–∫—É—â–∏–π –º–µ—Ç–æ–¥:* {coordinator.weight_method.value.replace('_', ' ').title()}
üéØ *–ü–æ—Ä–æ–≥ —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏:* {coordinator.rebalance_threshold:.1%}

"""
                
                total_weight = sum(a.weight for a in allocations.values())
                
                for key, allocation in allocations.items():
                    strategy_name = allocation.strategy_id.replace('_', ' ').title()
                    weight_pct = allocation.weight * 100
                    target_pct = allocation.target_allocation * 100
                    current_pct = allocation.current_allocation * 100
                    
                    deviation = abs(current_pct - target_pct)
                    status_emoji = "üü¢" if deviation <= coordinator.rebalance_threshold * 100 else "üü°"
                    
                    text += f"""
{status_emoji} *{strategy_name} ({allocation.ticker}):*
- –¢–µ–∫—É—â–∏–π –≤–µ—Å: {weight_pct:.1f}%
- –¶–µ–ª–µ–≤–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {target_pct:.1f}%
- –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {current_pct:.1f}%
- –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: {deviation:.1f}%

"""
                
                text += f"""
üìä *–ò—Ç–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–æ:* {total_weight:.1%}
üí∞ *–°–≤–æ–±–æ–¥–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞:* {(1-total_weight):.1%}

üí° *–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:*
- `/coordinate_portfolio` - –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫—É
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ > {coordinator.rebalance_threshold:.1%}
                """
            
            await update.message.reply_text(text, parse_mode=ParseMode.MARKDOWN)
            
        except Exception as e:
            await update.message.reply_text(
                f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Å–æ–≤ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π: {str(e)}",
                parse_mode=ParseMode.MARKDOWN
            )
            logger.error(f"Strategy weights command error: {e}")

    async def coordinate_portfolio_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /coordinate_portfolio."""
        loading_msg = await update.message.reply_text(
            "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –ø–æ—Ä—Ç—Ñ–µ–ª—è...\n"
            "üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏ –∞–≥—Ä–µ–≥–∏—Ä—É–µ–º —Å–∏–≥–Ω–∞–ª—ã...",
            parse_mode=ParseMode.MARKDOWN
        )
        
        try:
            coordinator = self.portfolio_coordinator
            
            # –í–∫–ª—é—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞
            if not coordinator.enabled:
                from portfolio_coordinator import StrategyWeight
                coordinator.enable_coordination(StrategyWeight.EQUAL)
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é
            result = await coordinator.coordinate_portfolio()
            
            if result["status"] == "success":
                text = f"""
‚úÖ *–ö–û–û–†–î–ò–ù–ê–¶–ò–Ø –ü–û–†–¢–§–ï–õ–Ø –ó–ê–í–ï–†–®–ï–ù–ê*

üìä *–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:*
- –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π: {result['strategies_count']}
- –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–æ —Å–∏–≥–Ω–∞–ª–æ–≤: {result['signals_aggregated']}
- –†–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞: {'‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∞' if result['rebalance_executed'] else '‚ûñ –ù–µ —Ç—Ä–µ–±–æ–≤–∞–ª–∞—Å—å'}
- –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {result['timestamp'][-8:-3]}

"""
                
                recommendations = result.get('recommendations', [])
                if recommendations:
                    text += "üéØ *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:*\n"
                    for rec in recommendations[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                        text += f"‚Ä¢ {rec}\n"
                    
                    if len(recommendations) > 5:
                        text += f"‚Ä¢ –ò –µ—â—ë {len(recommendations) - 5} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...\n"
                else:
                    text += "üìã *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:* –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤\n"
                
                text += f"""

üí° *–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:*
- `/portfolio_strategies` - –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
- `/strategy_weights` - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
- `/portfolio_performance` - –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
                """
                
            else:
                text = f"""
‚ùå *–û–®–ò–ë–ö–ê –ö–û–û–†–î–ò–ù–ê–¶–ò–ò –ü–û–†–¢–§–ï–õ–Ø*

–ü—Ä–∏—á–∏–Ω–∞: {result.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}

üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: `/portfolio_strategies`
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã: `/status`
                """
            
            await loading_msg.edit_text(text, parse_mode=ParseMode.MARKDOWN)
            
        except Exception as e:
            await loading_msg.edit_text(
                f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è: {str(e)}",
                parse_mode=ParseMode.MARKDOWN
            )
            logger.error(f"Coordinate portfolio command error: {e}")

    async def portfolio_performance_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /portfolio_performance."""
        loading_msg = await update.message.reply_text(
            "üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è...",
            parse_mode=ParseMode.MARKDOWN
        )
        
        try:
            coordinator = self.portfolio_coordinator
            status = coordinator.get_portfolio_status()
            allocations = coordinator.get_strategy_allocations()
            
            if not allocations:
                text = """
üìä *–ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨ –ü–û–†–¢–§–ï–õ–Ø*

‚ùå –í –ø–æ—Ä—Ç—Ñ–µ–ª–µ –Ω–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞

üí° –î–æ–±–∞–≤—å—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏ –¥–∞–π—Ç–µ –∏–º –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
                """
            else:
                # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø–æ—Ä—Ç—Ñ–µ–ª—è
                try:
                    analytics = await self.portfolio_analytics.calculate_comprehensive_metrics()
                except:
                    analytics = None
                
                text = f"""
üìä *–ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨ –ü–û–†–¢–§–ï–õ–Ø*

üìà *–û–±—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏:*
- –í—Å–µ–≥–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π: {status.total_strategies}
- –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π: {status.active_strategies}
- –°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {status.performance_score:.2%}
- –°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫: {status.risk_score:.2f}/1.0
- –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–æ–≤: {status.total_allocation:.1%}

"""
                
                if analytics and 'returns' in analytics:
                    returns = analytics['returns']
                    risk_metrics = analytics.get('risk_metrics', {})
                    
                    text += f"""
üí∞ *–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:*
- –û–±—â–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: {returns.get('total_return', 0):.2%}
- –ì–æ–¥–æ–≤–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: {returns.get('annualized_return', 0):.2%}

üõ°Ô∏è *–†–∏—Å–∫–∏:*
- –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: {risk_metrics.get('volatility', 0):.1%}
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞: {risk_metrics.get('max_drawdown', 0):.1%}
- Sharpe ratio: {risk_metrics.get('sharpe_ratio', 0):.2f}

"""
                
                # –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º
                text += "üéØ *–ü–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º:*\n"
                for key, allocation in allocations.items():
                    strategy_name = allocation.strategy_id.replace('_', ' ').title()
                    perf_icon = "üìà" if allocation.performance_score > 0 else "üìâ" if allocation.performance_score < 0 else "‚ûñ"
                    risk_icon = "üü¢" if allocation.risk_score < 0.3 else "üü°" if allocation.risk_score < 0.7 else "üî¥"
                    
                    text += f"""
{perf_icon} *{strategy_name} ({allocation.ticker}):*
- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {allocation.performance_score:.2%}
- –†–∏—Å–∫: {risk_icon} {allocation.risk_score:.2f}
- –í–µ—Å: {allocation.weight:.1%}

"""
                
                text += f"""
üìÖ *–í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:*
- –ü–æ—Å–ª–µ–¥–Ω—è—è —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞: {status.last_rebalance.strftime('%H:%M %d.%m.%Y')}
- –ò–Ω—Ç–µ—Ä–≤–∞–ª –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏: {coordinator.coordination_interval.total_seconds()/3600:.0f} —á–∞—Å–æ–≤

üí° *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è:*
- `/coordinate_portfolio` - –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
- `/strategy_weights` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ—Å–æ–≤
                """
            
            await loading_msg.edit_text(text, parse_mode=ParseMode.MARKDOWN)
            
        except Exception as e:
            await loading_msg.edit_text(
                f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {str(e)}",
                parse_mode=ParseMode.MARKDOWN
            )
            logger.error(f"Portfolio performance command error: {e}")