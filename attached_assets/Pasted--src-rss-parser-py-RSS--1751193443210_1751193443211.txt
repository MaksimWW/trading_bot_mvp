–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π —Ñ–∞–π–ª src/rss_parser.py. –ù–∞–π–¥–∏ —ç—Ç–∏ —Å—Ç—Ä–æ–∫–∏:

        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è RSS –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        self.rss_sources = {
            'rbc': {
                'name': '–†–ë–ö',
                'urls': [
                    'https://rssexport.rbc.ru/rbcnews/news/20/full.rss',
                ],
                'encoding': 'utf-8'
            },
            'finam': {
                'name': '–§–∏–Ω–∞–º',
                'urls': [
                    'https://www.finam.ru/net/analysis/conews/rsspoint',
                ],
                'encoding': 'utf-8'
            },
        }

–ò –∑–∞–º–µ–Ω–∏ –Ω–∞:

        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è RSS –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (—Ä–∞–±–æ—á–∏–µ URL)
        self.rss_sources = {
            'rbc': {
                'name': '–†–ë–ö',
                'urls': [
                    'https://rbc.ru/v10/ajax/get-news-feed/project/rbcnews.rbc.ru/',
                    'https://www.rbc.ru/crypto/',
                ],
                'encoding': 'utf-8'
            },
            'interfax': {
                'name': '–ò–Ω—Ç–µ—Ä—Ñ–∞–∫—Å',
                'urls': [
                    'https://www.interfax.ru/rss.asp',
                ],
                'encoding': 'utf-8'
            },
            'tass': {
                'name': '–¢–ê–°–°',
                'urls': [
                    'https://tass.ru/rss/v2.xml',
                ],
                'encoding': 'utf-8'
            },
            'vedomosti': {
                'name': '–í–µ–¥–æ–º–æ—Å—Ç–∏',
                'urls': [
                    'https://www.vedomosti.ru/rss/news',
                ],
                'encoding': 'utf-8'
            },
        }

–¢–∞–∫–∂–µ –¥–æ–±–∞–≤—å –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤. –ù–∞–π–¥–∏ –º–µ—Ç–æ–¥ __init__ –∏ –¥–æ–±–∞–≤—å –ø–æ—Å–ª–µ –Ω–µ–≥–æ:

    async def check_sources_availability(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ RSS –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RSS –ø–∞—Ä—Å–µ—Ä–∞...")
        print("üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:")
        
        if not self.session:
            self.session = aiohttp.ClientSession(timeout=self.timeout)
        
        for source_key, source_config in self.rss_sources.items():
            try:
                url = source_config['urls'][0]  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π URL
                async with self.session.get(url) as response:
                    if response.status == 200:
                        print(f"‚úÖ {source_key}")
                    else:
                        print(f"‚ùå {source_key} (HTTP {response.status})")
            except Exception as e:
                print(f"‚ùå {source_key} (–û—à–∏–±–∫–∞: {str(e)[:50]})")

–ò –≤ –∫–æ–Ω—Ü–µ —Ñ–∞–π–ª–∞ –∑–∞–º–µ–Ω–∏ —Ç–µ—Å—Ç–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é:

    async def test_rss_parser():
        async with RSSParser() as parser:
            await parser.check_sources_availability()
            
            print("üì∞ –¢–µ—Å—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ SBER:")
            sber_news = await parser.get_ticker_news("SBER", 24)
            print(f"–ù–∞–π–¥–µ–Ω–æ: {len(sber_news)} –Ω–æ–≤–æ—Å—Ç–µ–π")
            
            for i, news in enumerate(sber_news[:2]):
                title = news['title'][:50] + "..." if len(news['title']) > 50 else news['title']
                print(f"{i+1}. {title} (–†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {news['relevance_score']:.2f})")
            
            print("\nüìà –¢–µ—Å—Ç —Ä—ã–Ω–æ—á–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π:")
            market_news = await parser.get_market_news(12)
            print(f"–ù–∞–π–¥–µ–Ω–æ: {len(market_news)} –Ω–æ–≤–æ—Å—Ç–µ–π")
            
            for i, news in enumerate(market_news[:2]):
                title = news['title'][:50] + "..." if len(news['title']) > 50 else news['title']
                print(f"{i+1}. {title} (–ò—Å—Ç–æ—á–Ω–∏–∫: {news['source']})")